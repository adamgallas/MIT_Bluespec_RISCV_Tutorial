=== Generated schedule for mkCsrFile ===

Method schedule
---------------
Method: start
Ready signal: ! startReg.read
Conflict-free: started,
	       wr,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       startExcep,
	       eret
Sequenced before (restricted): start
Sequenced after: rd
 
Method: started
Ready signal: True
Conflict-free: start,
	       started,
	       rd,
	       wr,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       startExcep,
	       eret
 
Method: rd
Ready signal: True
Conflict-free: started,
	       rd,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec
Sequenced before: start, wr, startExcep, eret
 
Method: wr
Ready signal: ! toHostFifo_full
Conflict-free: start, started, cpuToHost, getMtvec
Sequenced before (restricted): startExcep
Sequenced after: rd, getMstatus, getMepc, getMcause
Conflicts: wr, eret
 
Method: cpuToHost
Ready signal: ! toHostFifo_empty
Conflict-free: start,
	       started,
	       rd,
	       wr,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       startExcep,
	       eret
Conflicts: cpuToHost
 
Method: getMstatus
Ready signal: True
Conflict-free: start,
	       started,
	       rd,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec
Sequenced before: wr, startExcep, eret
 
Method: getMepc
Ready signal: True
Conflict-free: start,
	       started,
	       rd,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       eret
Sequenced before: wr, startExcep
 
Method: getMcause
Ready signal: True
Conflict-free: start,
	       started,
	       rd,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       eret
Sequenced before: wr, startExcep
 
Method: getMtvec
Ready signal: True
Conflict-free: start,
	       started,
	       rd,
	       wr,
	       cpuToHost,
	       getMstatus,
	       getMepc,
	       getMcause,
	       getMtvec,
	       startExcep,
	       eret
 
Method: startExcep
Ready signal: True
Conflict-free: start, started, cpuToHost, getMtvec
Sequenced before (restricted): startExcep, eret
Sequenced after: rd, getMstatus, getMepc, getMcause
Sequenced after (restricted): wr
 
Method: eret
Ready signal: True
Conflict-free: start, started, cpuToHost, getMepc, getMcause, getMtvec
Sequenced after: rd, getMstatus
Sequenced after (restricted): startExcep
Conflicts: wr, eret
 
Rule schedule
-------------
Rule: toHostFifo_enqReq_canonicalize
Predicate: True
Blocking rules: (none)
 
Rule: toHostFifo_deqReq_canonicalize
Predicate: True
Blocking rules: (none)
 
Rule: toHostFifo_clearReq_canonicalize
Predicate: True
Blocking rules: (none)
 
Rule: toHostFifo_canonicalize
Predicate: True
Blocking rules: (none)
 
Rule: count
Predicate: startReg.read
Blocking rules: (none)
 
Logical execution order: started,
			 rd,
			 start,
			 cpuToHost,
			 getMstatus,
			 getMepc,
			 getMcause,
			 wr,
			 getMtvec,
			 startExcep,
			 eret,
			 count,
			 toHostFifo_canonicalize,
			 toHostFifo_enqReq_canonicalize,
			 toHostFifo_deqReq_canonicalize,
			 toHostFifo_clearReq_canonicalize

=========================================
