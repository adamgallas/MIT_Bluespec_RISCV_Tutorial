=== Generated schedule for mkProc ===

Method schedule
---------------
Method: cpuToHost
Ready signal: csrf.RDY_cpuToHost
Conflict-free: hostToCpu,
	       iMemInit_request_put,
	       iMemInit_done,
	       dMemInit_request_put,
	       dMemInit_done
Conflicts: cpuToHost
 
Method: hostToCpu
Ready signal: (! csrf.started) && iMem.init_done && dMem.init_done &&
	      csrf.RDY_start
Conflict-free: cpuToHost, iMemInit_done, dMemInit_done
Sequenced before: iMemInit_request_put, dMemInit_request_put
Sequenced before (restricted): hostToCpu
 
Method: iMemInit_request_put
Ready signal: iMem.RDY_init_request_put
Conflict-free: cpuToHost, dMemInit_request_put, dMemInit_done
Sequenced after: hostToCpu, iMemInit_done
Conflicts: iMemInit_request_put
 
Method: iMemInit_done
Ready signal: True
Conflict-free: cpuToHost,
	       hostToCpu,
	       iMemInit_done,
	       dMemInit_request_put,
	       dMemInit_done
Sequenced before: iMemInit_request_put
 
Method: dMemInit_request_put
Ready signal: dMem.RDY_init_request_put
Conflict-free: cpuToHost, iMemInit_request_put, iMemInit_done
Sequenced after: hostToCpu, dMemInit_done
Conflicts: dMemInit_request_put
 
Method: dMemInit_done
Ready signal: True
Conflict-free: cpuToHost,
	       hostToCpu,
	       iMemInit_request_put,
	       iMemInit_done,
	       dMemInit_done
Sequenced before: dMemInit_request_put
 
Rule schedule
-------------
Rule: doProc
Predicate: iMem.RDY_req &&
	   ((Exec.exec(Decode.decode(iMem.req(pc),
				     csrf.getMstatus[2:1] == 2'b0),
		       rf.rd1(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[57]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[56:52]
			      : (_ :: Bit 5)),
		       rf.rd2(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[51]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[50:46]
			      : (_ :: Bit 5)),
		       pc,
		       (_ :: Bit 32),
		       csrf.rd(Decode.decode(iMem.req(pc),
					     csrf.getMstatus[2:1] == 2'b0)[45]
			       ? Decode.decode(iMem.req(pc),
					       csrf.getMstatus[2:1] ==
					       2'b0)[44:33]
			       : (_ :: Bit 12)))[120:117] ==
	     4'd3)
	    ? dMem.RDY_req
	    : ((! (Exec.exec(Decode.decode(iMem.req(pc),
					   csrf.getMstatus[2:1] == 2'b0),
			     rf.rd1(Decode.decode(iMem.req(pc),
						  csrf.getMstatus[2:1] ==
						  2'b0)[57]
				    ? Decode.decode(iMem.req(pc),
						    csrf.getMstatus[2:1] ==
						    2'b0)[56:52]
				    : (_ :: Bit 5)),
			     rf.rd2(Decode.decode(iMem.req(pc),
						  csrf.getMstatus[2:1] ==
						  2'b0)[51]
				    ? Decode.decode(iMem.req(pc),
						    csrf.getMstatus[2:1] ==
						    2'b0)[50:46]
				    : (_ :: Bit 5)),
			     pc,
			     (_ :: Bit 32),
			     csrf.rd(Decode.decode(iMem.req(pc),
						   csrf.getMstatus[2:1] ==
						   2'b0)[45]
				     ? Decode.decode(iMem.req(pc),
						     csrf.getMstatus[2:1] ==
						     2'b0)[44:33]
				     : (_ :: Bit 12)))[120:117] ==
		   4'd4)) ||
	       dMem.RDY_req)) &&
	   ((Exec.exec(Decode.decode(iMem.req(pc),
				     csrf.getMstatus[2:1] == 2'b0),
		       rf.rd1(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[57]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[56:52]
			      : (_ :: Bit 5)),
		       rf.rd2(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[51]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[50:46]
			      : (_ :: Bit 5)),
		       pc,
		       (_ :: Bit 32),
		       csrf.rd(Decode.decode(iMem.req(pc),
					     csrf.getMstatus[2:1] == 2'b0)[45]
			       ? Decode.decode(iMem.req(pc),
					       csrf.getMstatus[2:1] ==
					       2'b0)[44:33]
			       : (_ :: Bit 12)))[120:117] ==
	     4'd1) ||
	    (Exec.exec(Decode.decode(iMem.req(pc),
				     csrf.getMstatus[2:1] == 2'b0),
		       rf.rd1(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[57]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[56:52]
			      : (_ :: Bit 5)),
		       rf.rd2(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[51]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[50:46]
			      : (_ :: Bit 5)),
		       pc,
		       (_ :: Bit 32),
		       csrf.rd(Decode.decode(iMem.req(pc),
					     csrf.getMstatus[2:1] == 2'b0)[45]
			       ? Decode.decode(iMem.req(pc),
					       csrf.getMstatus[2:1] ==
					       2'b0)[44:33]
			       : (_ :: Bit 12)))[120:117] ==
	     4'd0) ||
	    (Exec.exec(Decode.decode(iMem.req(pc),
				     csrf.getMstatus[2:1] == 2'b0),
		       rf.rd1(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[57]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[56:52]
			      : (_ :: Bit 5)),
		       rf.rd2(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[51]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[50:46]
			      : (_ :: Bit 5)),
		       pc,
		       (_ :: Bit 32),
		       csrf.rd(Decode.decode(iMem.req(pc),
					     csrf.getMstatus[2:1] == 2'b0)[45]
			       ? Decode.decode(iMem.req(pc),
					       csrf.getMstatus[2:1] ==
					       2'b0)[44:33]
			       : (_ :: Bit 12)))[120:117] ==
	     4'd11) ||
	    (Exec.exec(Decode.decode(iMem.req(pc),
				     csrf.getMstatus[2:1] == 2'b0),
		       rf.rd1(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[57]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[56:52]
			      : (_ :: Bit 5)),
		       rf.rd2(Decode.decode(iMem.req(pc),
					    csrf.getMstatus[2:1] == 2'b0)[51]
			      ? Decode.decode(iMem.req(pc),
					      csrf.getMstatus[2:1] ==
					      2'b0)[50:46]
			      : (_ :: Bit 5)),
		       pc,
		       (_ :: Bit 32),
		       csrf.rd(Decode.decode(iMem.req(pc),
					     csrf.getMstatus[2:1] == 2'b0)[45]
			       ? Decode.decode(iMem.req(pc),
					       csrf.getMstatus[2:1] ==
					       2'b0)[44:33]
			       : (_ :: Bit 12)))[120:117] ==
	     4'd12) ||
	    (csrf.RDY_wr &&
	     ((! Exec.exec(Decode.decode(iMem.req(pc),
					 csrf.getMstatus[2:1] == 2'b0),
			   rf.rd1(Decode.decode(iMem.req(pc),
						csrf.getMstatus[2:1] ==
						2'b0)[57]
				  ? Decode.decode(iMem.req(pc),
						  csrf.getMstatus[2:1] ==
						  2'b0)[56:52]
				  : (_ :: Bit 5)),
			   rf.rd2(Decode.decode(iMem.req(pc),
						csrf.getMstatus[2:1] ==
						2'b0)[51]
				  ? Decode.decode(iMem.req(pc),
						  csrf.getMstatus[2:1] ==
						  2'b0)[50:46]
				  : (_ :: Bit 5)),
			   pc,
			   (_ :: Bit 32),
			   csrf.rd(Decode.decode(iMem.req(pc),
						 csrf.getMstatus[2:1] ==
						 2'b0)[45]
				   ? Decode.decode(iMem.req(pc),
						   csrf.getMstatus[2:1] ==
						   2'b0)[44:33]
				   : (_ :: Bit 12)))[116]) ||
	      (! (Exec.exec(Decode.decode(iMem.req(pc),
					  csrf.getMstatus[2:1] == 2'b0),
			    rf.rd1(Decode.decode(iMem.req(pc),
						 csrf_getMstatus____d4(...)[2:1] ==
						 2'b0)[57]
				   ? Decode.decode(iMem.req(pc),
						   csrf_getMstatus____d4(...)[2:1] ==
						   2'b0)[56:52]
				   : (_ :: Bit 5)),
			    rf.rd2(Decode.decode(iMem.req(pc),
						 csrf_getMstatus____d4(...)[2:1] ==
						 2'b0)[51]
				   ? Decode.decode(iMem.req(pc),
						   csrf_getMstatus____d4(...)[2:1] ==
						   2'b0)[50:46]
				   : (_ :: Bit 5)),
			    pc,
			    (_ :: Bit 32),
			    csrf.rd(Decode.decode(iMem.req(pc),
						  csrf_getMstatus____d4(...)[2:1] ==
						  2'b0)[45]
				    ? Decode.decode(iMem.req(pc),
						    csrf_getMstatus____d4(...)[2:1] ==
						    2'b0)[44:33]
				    : (_ :: Bit 12)))[120:117] ==
		  4'd3)) ||
	      dMem.RDY_req))) &&
	   csrf.started
Blocking rules: (none)
 
Logical execution order: cpuToHost,
			 hostToCpu,
			 iMemInit_done,
			 iMemInit_request_put,
			 dMemInit_done,
			 dMemInit_request_put,
			 doProc

======================================
