/*
 * Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
 * 
 * On Fri Dec  2 22:41:44 PST 2022
 * 
 */

/* Generation options: */
#ifndef __mkXsimTop_h__
#define __mkXsimTop_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkMMUIndicationOutput.h"
#include "mkMMURequestInput.h"
#include "mkMMUSynth.h"
#include "mkMemServerIndicationOutput.h"
#include "mkMemServerRequestInput.h"
#include "mkCnocTop.h"


/* Class declaration for the mkXsimTop module */
class MOD_mkXsimTop : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
  tClock __clk_handle_1;
  tClock __clk_handle_2;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_dumpstarted;
  MOD_Reg<tUInt8> INST_initCalled;
  MOD_mkMMUIndicationOutput INST_lMMUIndicationOutput;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMUIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMMUIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_methodIdReg;
  MOD_mkMMURequestInput INST_lMMURequestInput;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMURequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_methodIdReg;
  MOD_mkMMUSynth INST_lMMU_mmu;
  MOD_mkMemServerIndicationOutput INST_lMemServerIndicationOutput;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMemServerIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_methodIdReg;
  MOD_mkMemServerRequestInput INST_lMemServerRequestInput;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerRequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_methodIdReg;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_burstReg;
  MOD_RegFile<tUInt8,tUInt32> INST_lMemServer_reader_readers_0_clientBurstLen;
  MOD_BRAM<tUInt32,tUWide,tUInt8> INST_lMemServer_reader_readers_0_clientData_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_3;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqData;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_3;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqData;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_clientSelect;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compClientReg;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_compCountReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTagReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTileReg;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_reader_readers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_3;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_comp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_mmuResp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readData;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readReq;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverData;
  MOD_BRAM<tUInt8,tUInt32,tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_serverTag;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tail_ptr;
  MOD_Reg<tUInt64> INST_lMemServer_reader_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficPtr;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt64> INST_lMemServer_writer_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficPtr;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_burstReg;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_clientResponse;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_0;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_1;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_writer_writers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_lastReg;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_mmuResp;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_memDataFifo;
  MOD_BRAM<tUInt8,tUInt8,tUInt8> INST_lMemServer_writer_writers_0_respFifos_memory;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_writeWithResp;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_writers_0_serverProcessing;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_serverRequest;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tail_ptr;
  MOD_Fifo<tUWide> INST_slave_2_0_bFifo;
  MOD_Reg<tUInt8> INST_slave_2_0_burstReg;
  MOD_Reg<tUInt64> INST_slave_2_0_cycles;
  MOD_Reg<tUInt64> INST_slave_2_0_last_read_eob;
  MOD_Reg<tUInt64> INST_slave_2_0_last_reqAr;
  MOD_Reg<tUInt64> INST_slave_2_0_last_write_eob;
  MOD_Fifo<tUWide> INST_slave_2_0_readDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_readLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_readOffsetReg;
  MOD_Reg<tUInt64> INST_slave_2_0_req_ar_b_ts;
  MOD_Reg<tUInt64> INST_slave_2_0_req_aw_b_ts;
  MOD_Fifo<tUInt8> INST_slave_2_0_reqs;
  MOD_Fifo<tUInt64> INST_slave_2_0_rw_dataFifo;
  MOD_Fifo<tUInt8> INST_slave_2_0_taglastfifo;
  MOD_Fifo<tUWide> INST_slave_2_0_writeDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_writeLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_writeOffsetReg;
  MOD_mkCnocTop INST_top;
 
 /* Constructor */
 public:
  MOD_mkXsimTop(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N_derivedReset;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l257c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l173c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_update_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l253c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_init_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l251c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_update_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_l242c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_l158c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_init_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_update_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l169c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_init_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l167c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_update_l157c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_init_l157c7;
  tUInt32 DEF_x__h95149;
  tUInt32 DEF_writeLen___2__h95222;
  tUInt8 DEF_x__h90372;
  tUInt8 DEF_x__h88532;
  tUInt8 DEF_client__h51534;
  tUWide DEF_slave_2_0_writeDelayFifo_first____d1434;
  tUWide DEF_slave_2_0_readDelayFifo_first____d1362;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_first____d750;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_first____d341;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first____d371;
  tUWide DEF_slave_2_0_bFifo_first____d1471;
  tUInt64 DEF_x__h95907;
  tUInt64 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1122;
  tUInt32 DEF_lMemServer_writer_writers_0_tag_gen_comp_state__h49254;
  tUInt32 DEF_t__h49638;
  tUInt32 DEF_lMemServer_reader_readers_0_tag_gen_comp_state__h10601;
  tUInt32 DEF_t__h10986;
  tUInt32 DEF_lMemServer_writer_writers_0_serverProcessing_f_ETC___d787;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d416;
  tUInt32 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d373;
  tUInt8 DEF_i__h12923;
  tUInt32 DEF_cnt__h14182;
  tUInt8 DEF_x__h89847;
  tUInt8 DEF_x__h88016;
  tUInt8 DEF__read__h44247;
  tUInt8 DEF__read__h44214;
  tUInt8 DEF__read__h2240;
  tUInt8 DEF__read__h2207;
  tUInt8 DEF_lMemServer_writer_writers_0_clientResponse_first____d1085;
  tUInt8 DEF_x__h49411;
  tUInt8 DEF_x__h10759;
  tUInt8 DEF_b__h47686;
  tUInt8 DEF_b__h46323;
  tUInt8 DEF_b__h8673;
  tUInt8 DEF_b__h7288;
  tUInt8 DEF_b__h5737;
  tUInt8 DEF_b__h4308;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d687;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d634;
  tUInt8 DEF_x__h14197;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d277;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d224;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d171;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d118;
  tUInt8 DEF_lMemServer_writer_writers_0_firstReg__h51945;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d666;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d664;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d663;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d613;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d611;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d610;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_3__h51754;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_2__h51753;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_1__h51752;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_0__h51751;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d256;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d254;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d253;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d203;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d201;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d200;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d150;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d148;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d147;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d96;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d94;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d93;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_3__h14222;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_2__h14221;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_1__h14220;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_0__h14219;
  tUInt8 DEF_lMemServerRequestInput_pipes_memoryTraffic_Pip_ETC___d1163;
  tUInt8 DEF_lMemServerRequestInput_pipes_stateDbg_PipeOut__ETC___d1152;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1253;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1252;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1251;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1250;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_2_n_ETC___d1177;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_1_n_ETC___d1176;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_0_n_ETC___d1175;
  tUInt8 DEF_x__h51546;
  tUInt8 DEF_x__h13621;
  tUInt8 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d374;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d688;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d635;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d278;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d225;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d172;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d119;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_writer_writers_0_killv__ETC___d789;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d438;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d418;
  tUInt8 DEF_lMemServer_writer_writers_0_tag_gen_tags_port1_ETC___d710;
  tUInt8 DEF_lMemServer_reader_readers_0_tag_gen_tags_port1_ETC___d300;
  tUInt8 DEF_slave_2_0_writeLenReg_442_EQ_0___d1443;
  tUInt32 DEF_y_avValue_snd_fst__h95452;
  tUInt8 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1124;
  tUInt8 DEF_lMemServer_writer_addrReqFifo_first__38_BITS_3_ETC___d840;
  tUInt8 DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d752;
  tUInt8 DEF_lMemServer_reader_addrReqFifo_first__51_BITS_3_ETC___d453;
  tUInt8 DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d343;
  tUInt8 DEF_IF_slave_2_0_writeLenReg_442_EQ_0_443_THEN_0_C_ETC___d1447;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_3_13___d414;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_2_11___d412;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_1_09___d410;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_0_07___d408;
 
 /* Local definitions */
 private:
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1342;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1338;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1334;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1329;
  tUInt32 DEF_TASK_read_simDma32___d1378;
  tUInt32 DEF_TASK_read_simDma32___d1379;
  tUInt8 DEF_TASK_dpi_cycle___d5;
  tUWide DEF_top_writers_1_writeReq_get___d1095;
  tUWide DEF_top_writers_0_writeReq_get___d1055;
  tUWide DEF_top_readers_1_readReq_get___d1024;
  tUWide DEF_top_readers_0_readReq_get___d985;
  tUWide DEF_top_writers_1_writeData_get___d1115;
  tUWide DEF_top_writers_0_writeData_get___d1084;
  tUWide DEF_lMMURequestInput_pipes_region_PipeOut_first____d46;
  tUWide DEF_lMMURequestInput_pipes_sglist_PipeOut_first____d36;
  tUWide DEF_lMemServer_writer_writers_0_serverRequest_first____d1422;
  tUWide DEF_lMemServer_reader_readers_0_serverRequest_first____d1393;
  tUWide DEF_lMMU_mmu_errorPipe_first____d25;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_1__ETC___d824;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_0__ETC___d822;
  tUWide DEF_lMemServer_writer_writers_0_memDataFifo_first____d1462;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d1021;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d241;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d237;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d188;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d184;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d284;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d231;
  tUInt64 DEF_x__h85223;
  tUInt64 DEF_words__h81807;
  tUInt64 DEF_x__h94383;
  tUInt64 DEF_words__h43839;
  tUInt32 DEF_data__h90331;
  tUInt32 DEF_data__h88491;
  tUInt32 DEF_x__h81218;
  tUInt32 DEF_x__h43246;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d135;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d81;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d651;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d598;
  tUInt8 DEF_x__h49767;
  tUInt8 DEF_x__h11115;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_3__h85359;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_2__h85358;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_1__h85357;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_0__h85356;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_3__h83546;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_2__h83545;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_1__h83544;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_0__h83543;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d764;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d360;
  tUInt64 DEF_lMMU_mmu_addr_1_response_get_65_BITS_39_TO_0___d766;
  tUInt64 DEF_lMMU_mmu_addr_0_response_get_61_BITS_39_TO_0___d362;
  tUInt8 DEF_v__h85649;
  tUInt8 DEF__0_CONCAT_DONTCARE___d109;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d366;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d771;
  tUWide DEF__2_CONCAT_DONTCARE___d898;
  tUWide DEF_slave_2_0_cycles_354_CONCAT_lMemServer_reader__ETC___d1404;
  tUWide DEF_slave_2_0_cycles_354_CONCAT_lMemServer_writer__ETC___d1432;
  tUWide DEF_top_writers_1_writeReq_get_095_CONCAT_1___d1110;
  tUWide DEF_top_writers_0_writeReq_get_055_CONCAT_0___d1079;
  tUWide DEF_top_readers_1_readReq_get_024_CONCAT_1___d1039;
  tUWide DEF_top_readers_0_readReq_get_85_CONCAT_0___d1009;
  tUWide DEF_slave_2_0_rw_dataFifo_first__412_CONCAT_slave__ETC___d1414;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first___ETC___d393;
  tUWide DEF_IF_SEL_ARR_NOT_lMemServer_writer_writers_0_kil_ETC___d830;
  tUWide DEF_slave_2_0_cycles_354_CONCAT_slave_2_0_writeDel_ETC___d1469;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_3_072___d1073;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_2_070___d1071;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_1_068___d1069;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_0_066___d1067;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_3_002___d1003;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_2_000___d1001;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_1_98___d999;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_0_96___d997;
  tUInt8 DEF_x__h49731;
  tUInt8 DEF_x__h11079;
 
 /* Rules */
 public:
  void RL_startdump();
  void RL_call_init();
  void RL_finish();
  void RL_lMMU_rl_idResponse();
  void RL_lMMU_rl_configResp();
  void RL_lMMU_dmaError();
  void RL_handle_sglist_request();
  void RL_handle_region_request();
  void RL_handle_idRequest_request();
  void RL_handle_idReturn_request();
  void RL_handle_setInterface_request();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_setFirstCore();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_setFirstEnq();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqOnly();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_deqOnly();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqAndDeq();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_setFirstCore();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_setFirstEnq();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqOnly();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_deqOnly();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqAndDeq();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_setFirstCore();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_setFirstEnq();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqOnly();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_deqOnly();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqAndDeq();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_setFirstCore();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_setFirstEnq();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqOnly();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_deqOnly();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqAndDeq();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_tag_gen_counter_react();
  void RL_lMemServer_reader_readers_0_tag_gen_complete_rule1();
  void RL_lMemServer_reader_readers_0_tag_gen_ret_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_init_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_tag_rule();
  void RL_lMemServer_reader_readers_0_cycle();
  void RL_lMemServer_reader_readers_0_dmaError();
  void RL_lMemServer_reader_readers_0_checkMmuResp();
  void RL_lMemServer_reader_readers_0_read_data();
  void RL_lMemServer_reader_readers_0_tag_completed();
  void RL_lMemServer_reader_readers_0_complete_burst1a();
  void RL_lMemServer_reader_readers_0_burst_remainder();
  void RL_lMemServer_reader_mmuEntry();
  void RL_lMemServer_reader_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_handle_abort();
  void RL_lMemServer_reader_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_every();
  void RL_lMemServer_reader_dbgFSM_restart();
  void RL_lMemServer_reader_dbgFSM_action_f_init_l157c7();
  void RL_lMemServer_reader_dbgFSM_action_l158c10();
  void RL_lMemServer_reader_dbgFSM_action_f_update_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7_1();
  void RL_lMemServer_reader_dbgFSM_fsm_start();
  void RL_lMemServer_reader_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_handle_abort();
  void RL_lMemServer_reader_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_every();
  void RL_lMemServer_reader_trafficFSM_restart();
  void RL_lMemServer_reader_trafficFSM_action_l167c20();
  void RL_lMemServer_reader_trafficFSM_action_f_init_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l169c10();
  void RL_lMemServer_reader_trafficFSM_action_f_update_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l173c17();
  void RL_lMemServer_reader_trafficFSM_idle_l166c4();
  void RL_lMemServer_reader_trafficFSM_fsm_start();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_setFirstCore();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_setFirstEnq();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqOnly();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_deqOnly();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqAndDeq();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_overRun();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_setFirstCore();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_setFirstEnq();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqOnly();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_deqOnly();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqAndDeq();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_overRun();
  void RL_lMemServer_writer_writers_0_tag_gen_counter_react();
  void RL_lMemServer_writer_writers_0_tag_gen_complete_rule1();
  void RL_lMemServer_writer_writers_0_tag_gen_ret_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_init_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_tag_rule();
  void RL_lMemServer_writer_writers_0_cycle();
  void RL_lMemServer_writer_writers_0_dmaError();
  void RL_lMemServer_writer_writers_0_checkMmuResp();
  void RL_lMemServer_writer_writers_0_writeDoneComp0();
  void RL_lMemServer_writer_writers_0_memdata();
  void RL_lMemServer_writer_writers_0_fill_clientResponse();
  void RL_lMemServer_writer_mmuEntry();
  void RL_lMemServer_writer_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_handle_abort();
  void RL_lMemServer_writer_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_every();
  void RL_lMemServer_writer_dbgFSM_restart();
  void RL_lMemServer_writer_dbgFSM_action_f_init_l241c7();
  void RL_lMemServer_writer_dbgFSM_action_l242c10();
  void RL_lMemServer_writer_dbgFSM_action_f_update_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7_1();
  void RL_lMemServer_writer_dbgFSM_fsm_start();
  void RL_lMemServer_writer_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_handle_abort();
  void RL_lMemServer_writer_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_every();
  void RL_lMemServer_writer_trafficFSM_restart();
  void RL_lMemServer_writer_trafficFSM_action_l251c20();
  void RL_lMemServer_writer_trafficFSM_action_f_init_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l253c10();
  void RL_lMemServer_writer_trafficFSM_action_f_update_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l257c17();
  void RL_lMemServer_writer_trafficFSM_idle_l250c4();
  void RL_lMemServer_writer_trafficFSM_fsm_start();
  void RL_lMemServer_0_mr_request();
  void RL_lMemServer_0_mr_response();
  void RL_lMemServer_1_mr_request();
  void RL_lMemServer_1_mr_response();
  void RL_lMemServer_1_0_mw_request();
  void RL_lMemServer_1_0_mw_response();
  void RL_lMemServer_1_0_mw_done();
  void RL_lMemServer_1_1_mw_request();
  void RL_lMemServer_1_1_mw_response();
  void RL_lMemServer_1_1_mw_done();
  void RL_handle_addrTrans_request();
  void RL_handle_setTileState_request();
  void RL_handle_stateDbg_request();
  void RL_handle_memoryTraffic_request();
  void RL_lMMUIndicationOutputNoc_sendHeader();
  void RL_lMMUIndicationOutputNoc_sendMessage();
  void RL_lMMURequestInputNoc_receiveMessageHeader();
  void RL_lMMURequestInputNoc_receiveMessage();
  void RL_lMemServerIndicationOutputNoc_sendHeader();
  void RL_lMemServerIndicationOutputNoc_sendMessage();
  void RL_lMemServerRequestInputNoc_receiveMessageHeader();
  void RL_lMemServerRequestInputNoc_receiveMessage();
  void RL_req_src_rdy();
  void RL_req_src_rdy_1();
  void RL_req_src_rdy_2();
  void RL_req_src_rdy_3();
  void RL_ind_dst_rdy();
  void RL_ind_dst_rdy_1();
  void RL_ind_dst_rdy_2();
  void RL_slave_2_0_increment_cycle();
  void RL_slave_2_0_read_rule();
  void RL_mkConnectionGetPut();
  void RL_mkConnectionGetPut_1();
  void RL_mkConnectionGetPut_2();
  void RL_mkConnectionGetPut_3();
  void RL_mkConnectionGetPut_4();
  void __me_check_69();
  void __me_check_70();
  void __me_check_80();
  void __me_check_81();
  void __me_check_82();
  void __me_check_83();
  void __me_check_124();
  void __me_check_125();
  void __me_check_135();
  void __me_check_136();
  void __me_check_137();
  void __me_check_138();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N_derivedReset(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
  void set_clk_1(char const *s);
  void set_clk_2(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
};

#endif /* ifndef __mkXsimTop_h__ */
